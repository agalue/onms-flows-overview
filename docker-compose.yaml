---
services:
  cassandra:
    image: cassandra:4.1
    hostname: cassandra
    container_name: cassandra
    environment:
      TZ: America/New_York
      CASSANDRA_CLUSTER_NAME: OpenNMS
      MAX_HEAP_SIZE: 2g
      HEAP_NEWSIZE: 2g
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool status -r | grep cassandra | awk '{print $1}') = UN ]"]
      interval: 30s
      timeout: 5s
      retries: 10

  redpanda:
    image: vectorized/redpanda:latest
    hostname: redpanda
    container_name: redpanda
    command:
    - redpanda
    - start
    - --kafka-addr internal://0.0.0.0:9092
    - --advertise-kafka-addr internal://redpanda:9092
    - --pandaproxy-addr internal://0.0.0.0:8082
    - --advertise-pandaproxy-addr internal://redpanda:8082
    - --schema-registry-addr redpanda:8081
    - --rpc-addr redpanda:33145
    - --advertise-rpc-addr redpanda:33145
    - --overprovisioned
    - --smp 1
    - --memory 1G
    - --reserve-memory 0M
    - --node-id 0
    - --check=false
    environment:
      TZ: America/New_York
    healthcheck:
      test: rpk cluster health
      interval: 15s
      timeout: 2s

  console:
    image: vectorized/console:latest
    hostname: console
    container_name: console
    depends_on:
      redpanda:
        condition: service_healthy
    ports:
    - 8000:8080
    volumes:
    - ./config/redpanda/console-config.yaml:/tmp/config.yml
    - ./config/redpanda/protobuf/:/tmp/protos/
    environment:
      TZ: America/New_York
      CONFIG_FILEPATH: /tmp/config.yml

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    hostname: elastic
    container_name: elastic
    ports:
    - 9200:9200
    volumes:
    - ./plugins/elastic:/usr/share/elasticsearch/plugins
    environment:
      TZ: America/New_York
      ES_JAVA_OPTS: -Xms2g -Xmx2g -XX:+UseStringDeduplication
      discovery.type: single-node
      bootstrap.memory_lock: true
      xpack.monitoring.collection.enabled: true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -f -I http://localhost:9200
      interval: 30s
      timeout: 2s
      retries: 10

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    hostname: kibana
    container_name: kibana
    depends_on:
      elastic:
        condition: service_healthy
    ports:
    - 5601:5601
    environment:
      TZ: America/New_York
      ELASTICSEARCH_HOSTS: http://elastic:9200
    healthcheck:
      test: curl -f -I http://localhost:5601
      interval: 30s
      timeout: 2s
      retries: 10

  database:
    image: postgres:14.5-alpine
    hostname: database
    container_name: database
    environment:
      TZ: America/New_York
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 1s
      retries: 10

  opennms:
    image: opennms/horizon:32.0.1
    hostname: opennms
    container_name: opennms
    depends_on:
      database:
        condition: service_healthy
      redpanda:
        condition: service_healthy
      cassandra:
        condition: service_healthy
    command: [ -s ]
    ports:
    - 8980:8980
    - 8101:8101
    volumes:
    - ./config/opennms:/opt/opennms-etc-overlay
    environment:
      TZ: America/New_York
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      OPENNMS_CASSANDRA_HOSTNAME: cassandra
      OPENNMS_TIMESERIES_STRATEGY: newts
      JAVA_OPTS: -Xms4g -Xmx4g -XX:+UseStringDeduplication
    healthcheck:
      test: curl -f -I http://localhost:8980/opennms/login.jsp
      interval: 30s
      timeout: 1s
      retries: 10

  minion:
    image: opennms/minion:32.0.1
    hostname: minion
    container_name: minion
    depends_on:
      redpanda:
        condition: service_healthy
      opennms:
        condition: service_healthy
    command: [ -c ]
    ports:
    - 8201:8201
    - 1162:1162/udp
    - 1514:1514/udp
    - 9999:9999/udp
    volumes:
    - ./config/minion:/opt/minion-etc-overlay
    environment:
      TZ: America/New_York
      MINION_ID: minion
      MINION_LOCATION: Docker
      OPENNMS_HTTP_URL: http://opennms:8980/opennms
      OPENNMS_HTTP_USER: admin
      OPENNMS_HTTP_PASS: admin
      JAVA_OPTS: -Xms1g -Xmx1g -XX:+UseStringDeduplication
    healthcheck:
      test: /health.sh
      interval: 30s
      timeout: 5s
      retries: 10

  sentinel:
    image: opennms/sentinel:32.0.1
    hostname: sentinel
    container_name: sentinel
    depends_on:
      database:
        condition: service_healthy
      redpanda:
        condition: service_healthy
      elastic:
        condition: service_healthy
      opennms: # To ensure the database exists
        condition: service_healthy
    command: [ -c ]
    ports:
    - 8301:8301
    volumes:
    - ./config/sentinel:/opt/sentinel-etc-overlay
    environment:
      TZ: America/New_York
      SENTINEL_ID: sentinel
      SENTINEL_LOCATION: Docker
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_DB: opennms
      POSTGRES_USER: opennms
      POSTGRES_PASSWORD: opennms
      OPENNMS_HTTP_URL: http://opennms:8980/opennms
      OPENNMS_HTTP_USER: admin
      OPENNMS_HTTP_PASS: admin
      JAVA_OPTS: -Xms2g -Xmx2g -XX:+UseStringDeduplication
    healthcheck:
      test: /health.sh
      interval: 30s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    container_name: prometheus
    ports:
    - 9090:9090
    volumes:
    - ./config/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus.yaml
    command:
    - --config.file=/etc/prometheus/prometheus.yaml
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090/-/ready || exit 1
      interval: 5s
      timeout: 1s
      retries: 10

  grafana:
    image: opennms/helm:bleeding # 9.x is giving some problems.
    hostname: grafana
    container_name: grafana
    depends_on:
      opennms:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    ports:
    - 3000:3000
    volumes:
    - ./config/grafana/datasources/:/etc/grafana/provisioning/datasources/
    - ./config/grafana/plugins/:/etc/grafana/provisioning/plugins/
    environment:
      TZ: America/New_York
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/login || exit 1
      interval: 10s
      timeout: 2s
      retries: 10

  sink-netflow9:
    image: agalue/onms-kafka-ipc-receiver:master
    hostname: sink-netflow9
    container_name: sink-netflow9
    depends_on:
      redpanda:
        condition: service_healthy
      opennms:
        condition: service_healthy
    command:
    - --bootstrap=redpanda:9092
    - --group-id=sink-netflow9
    - --ipc=sink
    - --parser=netflow
    - --topic=OpenNMS.Sink.Telemetry-Netflow-9
    environment:
      TZ: America/New_York
